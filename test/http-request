#!/usr/bin/perl -w
use strict;
use Socket qw(:all);

# initialize host and port
my $host = shift || 'localhost';
my $port = shift || 9000;

# create the socket, connect to the port
socket(SOCKET,PF_INET,SOCK_STREAM, IPPROTO_TCP)
   or die "Can't create a socket $!\n";
# setsockopt(SOCKET, IPPROTO_TCP, TCP_NODELAY, 1);
connect( SOCKET, pack_sockaddr_in($port, inet_aton($host)))
   or die "Can't connect to ${host}:${port}!\n";


my @request=(<<EOF
GET / HTTP/1.1\r
User-Agent: Wget/1.17.1 (cygwin)\r
Accept: */*\r
X-Multi-Line-Header: line 1\r
 line 2\r
   \t \t   \t line 3\r
 line 4\r
Accept-Encoding: identity\r
Host: 127.0.0.1\r
Connection: Keep-Alive\r
~~~\r
EOF
,

<<EOF
POST / HTTP/1.1\r
User-Agent: Wget/1.17.1 (cygwin)\r
Accept: */*\r
Accept-Encoding: identity\r
Host: 127.0.0.1\r
Connection: Keep-Alive\r
Transfer-Encoding: chunked\r
\r
4\r
abc
\r
0\r
X-Trailer-Header: nothing\r
X-Trailer-Header2: something\r
\r
EOF
,

<<EOF
POST / HTTP/1.1\r
User-Agent: Wget/1.17.1 (cygwin)\r
Accept: */*\r
Accept-Encoding: identity\r
Host: 127.0.0.1\r
Connection: Keep-Alive\r
Transfer-Encoding: chunked\r
\r
4\r
abc
\r
0\r
\r
EOF
);

my $r = 2;
my @chunks = split('~~~', $request[$r]);

$| = 1;
for my $chunk (@chunks) {
    my $sent = send SOCKET, $chunk, 0;
    if ($sent != length($chunk)) {
        die "Sent ${sent} bytes instead of ". length($chunk);
    }
    print $chunk;
}
close SOCKET or die "close: $!";
